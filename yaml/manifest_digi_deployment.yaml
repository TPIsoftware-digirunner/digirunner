apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: digi
  name: digirunner
  namespace: $NAMESPACE
  annotations:
    iam.gke.io/gcp-service-account: $PROJECT_NUM-compute@developer.gserviceaccount.com
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: digi
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: digi
    spec:
      imagePullSecrets:
        - name: pull-images-secret
      containers:
      - env:
        - name: Xmx
          value: 3g
        - name: Xms
          value: 3g
        - name: active
          value: gcp
        - name: TAEASK_KEY
          value: TsmpAESEncryptionActionSecretKey
        - name: port
          value: '8442'
        image: $IMAGE_DIGIRUNNER_APP
        imagePullPolicy: IfNotPresent
        name: digirunner-main
        ports:
        - containerPort: 8445
          protocol: TCP
        - containerPort: 8442
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/share/digiRunner/config
          name: nfs-volume-config
        - mountPath: /usr/share/digiRunner/keys
          name: nfs-volume-keys
      - args:
        - "1024"
        image: $IMAGE_COMPOSER_APP
        imagePullPolicy: IfNotPresent
        name: composer
        ports:
        - containerPort: 8440
          protocol: TCP
        resources:
          limits:
            cpu: 300m
            memory: 1G
          requests:
            cpu: 100m
            memory: 200Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /node-red/setting/env
          name: nfs-volume-env
        - mountPath: /node-red/setting/pem
          name: nfs-volume-pem
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nfs-volume-config
        nfs:
          path: /exports/config
          server: nfs-server.default.svc.cluster.local
      - name: nfs-volume-keys
        nfs:
          path: /exports/keys
          server: nfs-server.default.svc.cluster.local
      - name: nfs-volume-env
        nfs:
          path: /exports/env
          server: nfs-server.default.svc.cluster.local
      - name: nfs-volume-pem
        nfs:
          path: /exports/pem
          server: nfs-server.default.svc.cluster.local